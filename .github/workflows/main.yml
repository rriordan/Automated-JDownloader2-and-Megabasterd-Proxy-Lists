# Create a GitHub Actions workflow file for running the proxy scraper every 6 hours
workflow_yaml = """name: Proxy Scraper - Scheduled Run

on:
  schedule:
    # Run every 6 hours (at 00:00, 06:00, 12:00, 18:00 UTC)
    - cron: '0 */6 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  scrape-proxies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run proxy scraper
      run: |
        python proxy_scraper.py --proxy-type all
        
    - name: Check if proxy file was generated
      run: |
        if [ -f proxylist.jdproxies ]; then
          echo "Proxy file generated successfully"
          echo "File size: $(wc -c < proxylist.jdproxies) bytes"
        else
          echo "Error: Proxy file was not generated"
          exit 1
        fi
        
    - name: Upload proxy list as artifact
      uses: actions/upload-artifact@v4
      with:
        name: proxy-list-${{ github.run_number }}
        path: proxylist.jdproxies
        retention-days: 7
        
    - name: Commit and push updated proxy list (optional)
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -f proxylist.jdproxies ]; then
          git add proxylist.jdproxies
          
          # Only commit if there are changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update proxy list - $(date)"
            git push
          fi
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
"""

print("Generated GitHub Actions workflow file:")
print(workflow_yaml)

# Save to file
with open('.github-workflows-proxy-scraper.yml', 'w') as f:
    f.write(workflow_yaml)

print("\nWorkflow file saved as '.github-workflows-proxy-scraper.yml'")
print("\nTo use this workflow:")
print("1. Create a '.github/workflows' directory in your repository root")
print("2. Save the workflow as 'proxy-scraper.yml' inside that directory")
print("3. Commit and push to your repository")
