name: Proxy Scraper - Simple Fix

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      proxy_types:
        description: 'Proxy types: socks5,socks4,http or "all"'
        required: true
        default: 'all'
        type: string

jobs:
  scrape-proxies:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
      timeout-minutes: 5

    - name: Set proxy types
      id: types
      run: |
        INPUT="${{ github.event.inputs.proxy_types || 'all' }}"
        if [ "$INPUT" = "all" ]; then
          echo "types=socks5 socks4 http" >> $GITHUB_OUTPUT
        else
          echo "types=$(echo $INPUT | tr ',' ' ')" >> $GITHUB_OUTPUT
        fi

    - name: Run proxy scraper for each type
      run: |
        for type in ${{ steps.types.outputs.types }}; do
          echo "Processing $type proxies..."
          timeout 1800 python proxy_scraper.py --proxy-type "$type" || echo "Timeout for $type"
          if [ -f proxylist.jdproxies ]; then
            cp proxylist.jdproxies "proxylist-$type.jdproxies"
            echo "Saved proxylist-$type.jdproxies"
          fi
          sleep 10
        done

    - name: Combine proxy lists using Python one-liner
      run: |
        python -c "
import json, glob
proxies = []
for f in glob.glob('proxylist-*.jdproxies'):
    with open(f) as file:
        data = json.load(file)
        proxies.extend(data.get('customProxyList', []))

# Remove duplicates
seen, unique = set(), []
for p in proxies:
    key = f'{p["proxy"]["address"]}:{p["proxy"]["port"]}'
    if key not in seen:
        seen.add(key)
        unique.append(p)

# Sort by response time and save
unique.sort(key=lambda x: x.get('response_time', 999))
with open('proxylist.jdproxies', 'w') as f:
    json.dump({'customProxyList': unique}, f, indent=2)

print(f'Combined {len(unique)} unique proxies from {len(proxies)} total')
"

    - name: Verify files
      run: |
        echo "Generated files:"
        ls -la proxylist*.jdproxies
        if [ -f proxylist.jdproxies ]; then
          count=$(python -c "import json; print(len(json.load(open('proxylist.jdproxies'))['customProxyList']))")
          echo "Combined file has $count proxies"
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: proxy-lists-${{ github.run_number }}
        path: proxylist*.jdproxies
        retention-days: 7

    - name: Commit and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git pull origin ${{ github.ref_name }}
        git add proxylist*.jdproxies
        if ! git diff --cached --quiet; then
          git commit -m "Update proxy lists - $(date '+%Y-%m-%d %H:%M UTC')"
          git push origin ${{ github.ref_name }}
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
